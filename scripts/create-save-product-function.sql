-- 創建保存產品的函數
CREATE OR REPLACE FUNCTION save_product(product_data jsonb)
RETURNS jsonb
LANGUAGE plpgsql
AS $$
DECLARE
    v_result jsonb;
BEGIN
    -- 使用 INSERT ... ON CONFLICT 語法
    INSERT INTO products (
        customer_id,
        factory_id,
        component_name,
        component_name_en,
        part_no,
        specification,
        customs_code,
        end_customer,
        product_type,
        classification_code,
        vehicle_drawing_no,
        customer_drawing_no,
        product_period,
        description,
        status,
        created_date,
        last_order_date,
        last_price,
        currency,
        specifications,
        sample_status,
        sample_date,
        original_drawing_version,
        drawing_version,
        customer_original_drawing,
        jinzhan_drawing,
        customer_drawing,
        factory_drawing,
        customer_drawing_version,
        factory_drawing_version,
        images,
        is_assembly,
        components,
        assembly_time,
        assembly_cost_per_hour,
        additional_costs,
        important_documents,
        part_management,
        compliance_status,
        edit_notes,
        process_data,
        order_requirements,
        purchase_requirements,
        special_requirements,
        process_notes,
        has_mold,
        mold_cost,
        refundable_mold_quantity,
        mold_returned,
        accounting_note,
        quality_notes,
        order_history,
        resume_notes,
        moq,
        lead_time,
        packaging_requirements,
        sub_part_no
    )
    VALUES (
        (product_data->>'customer_id')::uuid,
        (product_data->>'factory_id')::uuid,
        product_data->>'component_name',
        product_data->>'component_name_en',
        product_data->>'part_no',
        product_data->>'specification',
        product_data->>'customs_code',
        product_data->>'end_customer',
        product_data->>'product_type',
        product_data->>'classification_code',
        product_data->>'vehicle_drawing_no',
        product_data->>'customer_drawing_no',
        product_data->>'product_period',
        product_data->>'description',
        product_data->>'status',
        (product_data->>'created_date')::date,
        (product_data->>'last_order_date')::date,
        (product_data->>'last_price')::numeric,
        product_data->>'currency',
        product_data->'specifications',
        product_data->>'sample_status',
        (product_data->>'sample_date')::date,
        product_data->>'original_drawing_version',
        product_data->>'drawing_version',
        product_data->>'customer_original_drawing',
        product_data->>'jinzhan_drawing',
        product_data->>'customer_drawing',
        product_data->>'factory_drawing',
        product_data->>'customer_drawing_version',
        product_data->>'factory_drawing_version',
        product_data->'images',
        (product_data->>'is_assembly')::boolean,
        product_data->'components',
        (product_data->>'assembly_time')::numeric,
        (product_data->>'assembly_cost_per_hour')::numeric,
        product_data->'additional_costs',
        product_data->'important_documents',
        product_data->'part_management',
        product_data->'compliance_status',
        product_data->'edit_notes',
        product_data->'process_data',
        product_data->'order_requirements',
        product_data->'purchase_requirements',
        product_data->'special_requirements',
        product_data->'process_notes',
        (product_data->>'has_mold')::boolean,
        (product_data->>'mold_cost')::numeric,
        (product_data->>'refundable_mold_quantity')::integer,
        (product_data->>'mold_returned')::boolean,
        product_data->>'accounting_note',
        product_data->'quality_notes',
        product_data->'order_history',
        product_data->'resume_notes',
        (product_data->>'moq')::integer,
        (product_data->>'lead_time')::integer,
        product_data->'packaging_requirements',
        product_data->'sub_part_no'
    )
    ON CONFLICT (component_name, part_no) DO UPDATE SET
        customer_id = EXCLUDED.customer_id,
        factory_id = EXCLUDED.factory_id,
        component_name_en = EXCLUDED.component_name_en,
        specification = EXCLUDED.specification,
        customs_code = EXCLUDED.customs_code,
        end_customer = EXCLUDED.end_customer,
        product_type = EXCLUDED.product_type,
        classification_code = EXCLUDED.classification_code,
        vehicle_drawing_no = EXCLUDED.vehicle_drawing_no,
        customer_drawing_no = EXCLUDED.customer_drawing_no,
        product_period = EXCLUDED.product_period,
        description = EXCLUDED.description,
        status = EXCLUDED.status,
        created_date = EXCLUDED.created_date,
        last_order_date = EXCLUDED.last_order_date,
        last_price = EXCLUDED.last_price,
        currency = EXCLUDED.currency,
        specifications = EXCLUDED.specifications,
        sample_status = EXCLUDED.sample_status,
        sample_date = EXCLUDED.sample_date,
        original_drawing_version = EXCLUDED.original_drawing_version,
        drawing_version = EXCLUDED.drawing_version,
        customer_original_drawing = EXCLUDED.customer_original_drawing,
        jinzhan_drawing = EXCLUDED.jinzhan_drawing,
        customer_drawing = EXCLUDED.customer_drawing,
        factory_drawing = EXCLUDED.factory_drawing,
        customer_drawing_version = EXCLUDED.customer_drawing_version,
        factory_drawing_version = EXCLUDED.factory_drawing_version,
        images = EXCLUDED.images,
        is_assembly = EXCLUDED.is_assembly,
        components = EXCLUDED.components,
        assembly_time = EXCLUDED.assembly_time,
        assembly_cost_per_hour = EXCLUDED.assembly_cost_per_hour,
        additional_costs = EXCLUDED.additional_costs,
        important_documents = EXCLUDED.important_documents,
        part_management = EXCLUDED.part_management,
        compliance_status = EXCLUDED.compliance_status,
        edit_notes = EXCLUDED.edit_notes,
        process_data = EXCLUDED.process_data,
        order_requirements = EXCLUDED.order_requirements,
        purchase_requirements = EXCLUDED.purchase_requirements,
        special_requirements = EXCLUDED.special_requirements,
        process_notes = EXCLUDED.process_notes,
        has_mold = EXCLUDED.has_mold,
        mold_cost = EXCLUDED.mold_cost,
        refundable_mold_quantity = EXCLUDED.refundable_mold_quantity,
        mold_returned = EXCLUDED.mold_returned,
        accounting_note = EXCLUDED.accounting_note,
        quality_notes = EXCLUDED.quality_notes,
        order_history = EXCLUDED.order_history,
        resume_notes = EXCLUDED.resume_notes,
        moq = EXCLUDED.moq,
        lead_time = EXCLUDED.lead_time,
        packaging_requirements = EXCLUDED.packaging_requirements,
        sub_part_no = EXCLUDED.sub_part_no
    RETURNING to_jsonb(products.*) INTO v_result;

    RETURN v_result;
END;
$$; 